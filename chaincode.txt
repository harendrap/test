## Housekeeping-docker
# Kill stale conatiners and cached nwetwork
docker rm -f $(docker ps -aq)
docker network prune or docker system prube

#Using fabcar template from fabric-samples

#update chaincode-fabcar(~\go\src\github.com\fabric-samples\chaincode\fabcar\javascript\lib\fabcar.js)

#Install dependencies, Here javascript using npm for build
cd ~/go/src/github.com/fabric-samples/fabcar/javascript
npm install

# clean old identities in wallet; launch network; create channel and join peers to channel; deploy chaincode on each peer, approve and call init method
../startFabric.sh javscript  or ~/go/src/github.com/fabric-samples/fabcar/startFabric.sh javascript

#check couchdb on localhost:5984/_utils  and user=admin and pwd=adminpw

# Enroll the admin user, and import the new identity into the wallet
node enrollAdmin.js
	#Wallet path: ~/go/src/github.com/fabric-samples/fabcar/javascript/wallet
	# Successfully enrolled admin user "admin" and imported it into the wallet


#Register the user, enroll the user, and import the new identity into the wallet.
node registerUser.js
	
	#Successfully registered and enrolled admin user "appUser" and imported it into the wallet

#copy monitordocker.sh from commercial paper(config/cli) tutorial. This script to watch docker 

#create gateway and submit transaction. Gateway(wallet+user) connects to the network->channel->smart contract. Then it can submit transaction - update ledger via stub.putState(key,obj)
node invoke.js

#query all vax or particular vax by its unique key. Calling evaluate transaction using gateway. Chaincode uses stub.getState(key)
node query.js
